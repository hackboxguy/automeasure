#!/bin/sh
#this script is used to filter-out the data generated by measure.sh and only the required average value of xy points of RGBW are extracted to filtered.csv
#a simplified filtered.csv is needed to run python script provided by imagetools repo: https://github.com/hackboxguy/imagetools.git
# Parse command line arguments
while [ $# -gt 0 ]; do
    case "$1" in
        --input=*)
            INPUT=$(echo "$1" | sed 's/--input=//')
            shift
            ;;
        --output=*)
            OUTPUT=$(echo "$1" | sed 's/--output=//')
            shift
            ;;
        *)
            echo "Unknown parameter: $1"
            exit 1
            ;;
    esac
done

# Verify input parameters
if [ -z "$INPUT" ] || [ -z "$OUTPUT" ]; then
    echo "Usage: $0 --input=<input_csv> --output=<output_csv>"
    exit 1
fi

# Check if input file exists
if [ ! -f "$INPUT" ]; then
    echo "Input file $INPUT does not exist"
    exit 1
fi

# Process the CSV and calculate averages using awk
awk -F',' '
BEGIN {
    # Initialize counters and sums for each color
    colors["W"] = colors["R"] = colors["G"] = colors["B"] = 0
    # Define color order
    color_order[1] = "R"
    color_order[2] = "G"
    color_order[3] = "B"
    color_order[4] = "W"
    num_colors = 4
}

# Skip header
NR > 1 {
    color = $4  # Sampled-Color column
    x = $9      # x coordinate
    y = $10     # y coordinate
    
    # Sum up values
    sum_x[color] += x
    sum_y[color] += y
    count[color]++
}

END {
    # Print header to output file
    print "Color,x,y" > "'$OUTPUT'"
    
    # Print colors in specified order
    for (i = 1; i <= num_colors; i++) {
        color = color_order[i]
        if (count[color] > 0) {
            avg_x = sum_x[color] / count[color]
            avg_y = sum_y[color] / count[color]
            printf "%s,%.4f,%.4f\n", color, avg_x, avg_y >> "'$OUTPUT'"
        }
    }
}' "$INPUT"

rc=$?
if [ $rc -eq 0 ]; then
    echo "Successfully processed data and wrote to $OUTPUT"
else
    echo "Error processing data"
    exit 1
fi
